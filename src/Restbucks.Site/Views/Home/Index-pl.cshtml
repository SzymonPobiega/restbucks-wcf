@{
    ViewBag.Title = "Restbucks";
}

<h3>Project Restbucks</h3>
<p>
    Pomysł wykorzystania kawiarni jako przykładu aplikacji biznesowej pochodzi oryginalnie z 
    <a href="http://www.eaipatterns.com/docs/IEEE_Software_Design_2PC.pdf">artykułu Gregor-a Hohpe</a>. Publikacja
    ta zawiera bardzo cenne spostrzeżenie, iż nawet bardzo duże i skomplikowane systemy komputerowe (podobnie jak Starbucks)
    mogą swobodnie obejść się bez transakcji rozproszonych (a także protokołu 2-phase commit) zachowując przy tym
    całkowitą spójność danych biznesowych oraz zadowolenie klientów/użytkowników.
</p>
<p>
    Sama nazwa <q>Restbucks</q> pochodzi ze świetnej książki autorstwa Jim'a Webber'a, Savas'a Parastatidis and Ian'a Robinson'a -- 
    <a href="http://restinpractice.com">REST in Practice</a>. Autorzy używają przykładu hipotetycznej internetowej kawiarni
    do ilustracji wszystkich opisanych w książce aspektów stylu REST.
</p>
<p>
    Czytając wspomnianą książkę oraz jednocześnie śledząc rozwój WCF Web APIs pomyślałem, że nic tak dobrze nie pomoże mi
    przyswoić sobie nowej wiedzy, jak wykorzystanie jej w praktyce, czyli swtworzenie portu przykładowej aplikacji z 
    'REST in Practice' na najnowszy framework rodem z Redmond. Tak właśnie narodziło się <span class="restbucks">Restbucks.net</span>.
    Zawartość tej strony nie jest oficjalnie w żaden sposób związana z 'REST in Pracice'. Nie podlegała także autoryzacji
    przez autorów książki. Jest to po prostu zwykły fan site.
</p>
<p>
    Kod źródłowy tej storny, serwisu WCF <span class="restbucks">Restbucks.net</span> oraz referencyjnego klienta konsolowego
    możecie znaleźć na <a href="https://github.com/SzymonPobiega/restbucks-wcf">github'ie</a>. Wystarczy, że sklonujecie repozytorium:
    <pre>git://github.com/SzymonPobiega/restbucks-wcf.git</pre>
    Możecie także bezpośrednio pobrać najnowszą wersję w postaci paczki zip <a href="https://github.com/SzymonPobiega/restbucks-wcf/zipball/master">stąd</a>.
</p>
